name: Optimize PNG Images

on:
  push:
    # Only run when PNG images change
    paths:
      - 'games/**/*.png'
      - 'games/**/*.PNG'

permissions:
  contents: write

jobs:
  optimize:
    # Prevent recursion when the workflow's own commit pushes back
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pngquant
        run: |
          sudo apt-get update
          sudo apt-get install -y pngquant

      - name: Optimize changed PNG images
        shell: bash
        run: |
          set -euo pipefail

          BASE="${{ github.event.before }}"
          # Handle initial push/new branch case where before is all zeros
          if [ "$BASE" = "0000000000000000000000000000000000000000" ] || ! git cat-file -e "$BASE" 2>/dev/null; then
            BASE="$(git rev-parse HEAD^ 2>/dev/null || echo '')"
          fi

          # List changed files in this push (added/modified/renamed)
          CHANGED=$(git diff --name-only --diff-filter=AMR ${BASE:+"$BASE"} "$GITHUB_SHA" || true)
          if [ -z "$CHANGED" ]; then
            # Fallback to files in the last commit
            CHANGED=$(git show --pretty='' --name-only "$GITHUB_SHA" || true)
          fi

          # Filter to PNGs under games/
          mapfile -t PNGS < <(printf '%s\n' "$CHANGED" | grep -Ei '^games/.*\.png$' || true)

          if [ "${#PNGS[@]}" -eq 0 ]; then
            echo "No changed PNGs to optimize."
            exit 0
          fi

          echo "Optimizing ${#PNGS[@]} changed PNG(s):"
          printf ' - %s\n' "${PNGS[@]}"

          # Optimize with verbose output and target quality window
          for f in "${PNGS[@]}"; do
            [ -f "$f" ] || continue
            # pngquant exits non-zero when quality would drop below min; don't fail the job for that
            pngquant -v --force --skip-if-larger --strip --speed 1 --quality=78-94 --ext .png "$f" || true
          done

          # Show summary of any changes
          if ! git diff --quiet; then
            echo "Optimization produced changes. Files to update:"
            git status --porcelain
          else
            echo "No image changes after optimization."
          fi

      - name: Commit and push changes
        if: always()
        run: |
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore(images): optimize PNGs via pngquant [skip-ci]"
            git push
          else
            echo "Nothing to commit."
          fi
